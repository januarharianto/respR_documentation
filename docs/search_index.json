[
["index.html", "respR 1 Introduction", " respR written by Januar Harianto and Nicholas Carey 1 Introduction The respR package provides a structural, reproducible workflow for the processing and analysis of respirometry data. While the focus of our package is on aquatic respirometry, respR is largely unitless, and so can process linear relationships in any time-series data. Most importantly, respR uses peer-reviewed methods for all of its analyses, which means that all methods are well grounded in the literature. View our acknowledgements section to view a list of methods and their references. Use respR to: automatically import raw data from various oxygen sensing equipment; rapidly test data for issues before analysis; explore and visualise timeseries data; calculate linear segments of data manually or automatically; convert units of oxygen consumption; and export results quickly for reporting. The goal of this guide is to walk you through the respR package to import, analyse and convert your data. Before we begin, you will need to install the package. "],
["installation.html", "2 Installation", " 2 Installation We are finalising our plans to publish respR on CRAN. For now, use the devtools package to install a stable version of the package: # install devtools install.packages(&quot;devtools&quot;) # use devtools to install respR from GitHub devtools::install_github(&quot;januarharianto/respR&quot;) Next, load the respR package into your workspace: library(respR) If you are using respR to analyse respirometry data for the first time, check out our “Getting Started” guide. Otherwise, use the Table of Contents to navigate your way to any topic of interest. "],
["getting-started.html", "3 Getting Started 3.1 Aquatic Respirometry 3.2 The respR R package 3.3 Example Data", " 3 Getting Started 3.1 Aquatic Respirometry There are four broad methodological approaches in aquatic respirometry: closed-chamber, intermittent-flow, flow-through and open-tank. In closed-chamber respirometry, \\(O_2\\) decrease is measured within a hermetically sealed chamber of known volume, sometimes set within a closed loop to allow mixing of the environment within the chamber. Oxygen recordings may be continuous through use of an oxygen probe, periodic through withdrawing water or gas samples at set intervals, or a two-point measurement consisting of the initial and final concentrations. Metabolic rates are estimated from the \\(O_2\\) timeseries by assuming a linear relationship between variables, and estimates of metabolic rate are straightforward in constant volume respirometry using the equation: \\[VO_2 = \\dot O_2V\\] where \\(\\dot O_2\\) is the slope of the regression that describes the rate of change in \\(O_2\\) concentration over time, or in the case of a two-point measurement, the difference in \\(O_2\\) concentration divided by time elapsed, and \\(V\\) is the volume of fluid in the container (Lighton 2008). In intermittent-flow respirometry, \\(O_2\\) concentration is measured as described above, but periodically the chamber is flushed with new water or air, returning it to initial conditions, resealed, and the experiment repeated (Svendsen et al. 2016). This technique is essentially the same as closed respirometry, but with the ability to conduct replicates easily. Depending on the metabolic rate metric being investigated, final respiration rate can be calculated as the mean of the measures (e.g. Carey et al. 2016), or the lowest or highest rates recorded in any trial (e.g. Stoffels 2015). Flow-through respirometry involves a closed chamber, but with a regulated flow of air or water through it at a precisely determined rate. After equilibrium has been achieved, the oxygen concentration differential between the incurrent and excurrent channels, along with the flow rate, allows calculation of the oxygen extracted from the flow volume per unit time: \\[\\dot{V}O_2 = (C_iO_2 - C_eO_2)FR\\] where \\(\\dot{V}O_2\\) is the rate of \\(O_2\\) consumption over time, \\(C_iO_2\\) and \\(C_eO_2\\) are the incurrent and excurrent \\(O_2\\) concentrations, and \\(FR\\) is the flow rate through the system (Lighton 2008). A final method is open-tank respirometry, in which a tank or semi-enclosed area open to the atmosphere is used, but the input or mixing rate of oxygen from the surroundings has been quantified or found to be negligible relative to oxygen consumption of the specimens (Leclercq et al. 1999). It is seldom used, but for some applications it is a sufficient and practical methodology (Gamble et al. 2014). The common equation used for open respirometry is: \\[\\dot{V}O_2 = \\dot O_2V + \\phi_d\\] where \\(\\dot O_2V\\) is the slope of the regression that relates \\(O_2\\) concentration to time, \\(V\\) is the volume of the arena and \\(\\phi_d\\) is the oxygen flux as determined by Fick’s Law (Leclercq et al. 1999). 3.2 The respR R package respR is a package designed to process the data from all of these types of respirometry experiment. It is designed primarily for aquatic respirometry, although because many of the main functions are unitless it is adaptable for use with gaseous respirometry, and indeed analysis of other data where a parameter may change over time. When working with respirometry data, you will often need to: Ensure that the data, or at least a subset of the data, is representative of the research question of interest. Perform an initial analysis of the data to estimate the rate of change in oxygen concentration or amount. Depending on the experimental setup, correct for background usage of oxygen by micro-organisms, or correct for oxygen flux from the air. Convert the resulting usage rate to the volumetric and mass-specific rates in the appropriate units. The respR package allows determination of common respirometry metrics and contains several functions to make this process straightforward. It provides visual feedback and diagnostic plots to help you explore, subset and analyse your data. It uses computational techniques such as rolling regressions and kernel density estimates to determine maximum, minimum or most linear rates within time-series data. The package takes an object-oriented approach, with all functions outputting objects which can be read by subsequent functions. By separating the workflow into a series of connected functions, you can “mix and match” functions to help you achieve your result. Output objects can also be saved or exported, and contain all raw data, parameters used in calculations, and results, allowing for a fully documented and reproducibile analysis of respirometry data. 3.3 Example Data We have provided example data that can be used immediately once respR is loaded (urchins.rd(), intermittent.rd(), zeb_intermittent.rd(), sardine.rd(), squid.rd(), flowthrough.rd()). data(package = &quot;respR&quot;) "],
["methods.html", "4 Methods", " 4 Methods We describe our methods in this chapter. "],
["applications.html", "5 Applications 5.1 Example one 5.2 Example two", " 5 Applications Some significant applications are demonstrated in this chapter. 5.1 Example one 5.2 Example two "],
["final-words.html", "6 Final Words", " 6 Final Words We have finished a nice book. "],
["references.html", "References", " References "]
]
